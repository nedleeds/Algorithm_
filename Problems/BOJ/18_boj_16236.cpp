#include <iostream>
using namespace std;

int N;
int MAP[20][20];

int main(){
    ios_base::sync_with_stdio(false);
    cin.tie();
    cout.tie();

    freopen("../SampleInput/input.txt", "r", stdin);

    
    cin >> N;
    for (int r = 0; r < N; r++){
        for (int c = 0; c < N; c++){
            cin >> MAP[r][c];
        }
    }


    return 0;
}
/*
공간    : NxN 크기

물고기   : M마리
       : 1칸당 물고기 최대 1마리
       : 크기 자연수

아기상어 : 1마리
       : 처음 크기 - 2
       : 1초에 상하좌우로 인접한 한 칸 씩 이동
       : 자신의 크기보다 작은 물고기만 먹는다
       : 크기가 같은 물고기 - 먹을 수는 없지만 지나갈 수 있다
       - 더 이상 먹을 수 있는 물고기가 공간에 없으면 -> 엄마 상어에게 도움 요청
       - 먹을 수 있는 물고기 = 1마리 -> 먹으러 간다(이동)
       - 먹을 수 있는 물고기 > 1마리 
          -> 가장 가까운 물고기 먹으러 간다
          -> 거리: 아기 상어가 있는 칸에서 물고기가 있는 칸으로 이동할 때
                  지나야 하는 칸의 갯수의 최솟값
          -> 거리가 가까운 물고기가 많다면, 
             -> 가장 위에 있는 물고기
             -> 그러한 물고기가 여러마리라면, 가장 왼쪽에 있는 물고기를 먹는다
        - 아기 상어의 이동은 1초, 물고기 먹는데 걸리는 시간은 없다
        - 아기 상어가 먹을 수 있는 물고기가 있는 칸으로 이동했다면, 동시에 먹음
        - "물고기를 먹으면 그 칸은 빈 칸이 된다"
        - 아기 상어는 "자신의 크기"와 "같은 수"의 물고기를 먹을 때 마다 크기가 1증가한다
          -> 1이면 1마리 먹고 증가, 2면 2마리 먹고 증가 ...
        - 공간(map)이 주어졌을 때, 
          아기 상어가 몇 초 동안 "엄마 상어에게 도움을 요청하지 않고"
          물고기를 잡아먹을 수 있는지 구하는 프로그램을 작성하시오
*/